name: Tagged Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  tagged_release:
    name: Tagged Release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    env:
      PROJECT_BIN_NAME: j
      GITHUB_REPOSITORY: 5c077m4n/path-jump
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Tag version
        id: tag_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_BIN_NAME }}_${{ matrix.os }}
          path: |
            target/release/${{ env.PROJECT_BIN_NAME }}
            target/release/${{ env.PROJECT_BIN_NAME }}.sh
          if-no-files-found: error
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.PROJECT_BIN_NAME }}_${{ matrix.os }}
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          TAG_VERSION: ${{ steps.tag_version.outputs.VERSION }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.TAG_VERSION }}-${{ matrix.os }}
          tag_name: ${{ env.TAG_VERSION }}-${{ matrix.os }}
          prerelease: contains(github.ref, 'alpha') || contains(github.ref, 'beta')
          files: |
            ${{ env.PROJECT_BIN_NAME }}_${{ matrix.os }}
          fail_on_unmatched_files: true
