name: Tagged Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  tagged_release:
    name: Tagged Release
    env:
      PROJECT_BASE_NAME: pathman
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Tag version
        id: tag_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Set SDK for macOS aarch64
        if: ${{ matrix.target == 'aarch64-apple-darwin' && matrix.os == 'macos-latest' }}
        run: |
          sudo xcode-select -s "/Applications/Xcode_12.4.app"
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Release build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      # - name: Setup tmate debug session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 30
      #   with:
      #     sudo: false
      #     limit-access-to-actor: true

      - name: Move final files
        run: |
          mkdir dist
          cp resources/* dist/
          cp target/${{ matrix.target }}/release/${{ env.PROJECT_BASE_NAME }}_paths dist/
          cp target/${{ matrix.target }}/release/${{ env.PROJECT_BASE_NAME }}_bookmarks dist/

      - name: Create zip artifact
        uses: TheDoctor0/zip-release@master
        with:
          type: zip
          filename: ${{ env.PROJECT_BASE_NAME }}_${{ matrix.target }}.zip
          directory: dist/
          path: |
            p
            pb
            ${{ env.PROJECT_BASE_NAME }}_paths
            ${{ env.PROJECT_BASE_NAME }}_bookmarks

      - name: Create tar artifact
        uses: TheDoctor0/zip-release@master
        with:
          type: tar
          filename: ${{ env.PROJECT_BASE_NAME }}_${{ matrix.target }}.tar.gz
          directory: dist/
          path: |
            p
            pb
            ${{ env.PROJECT_BASE_NAME }}_paths
            ${{ env.PROJECT_BASE_NAME }}_bookmarks

      - name: Cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        env:
          TAG_VERSION: ${{ steps.tag_version.outputs.VERSION }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.TAG_VERSION }}
          prerelease: contains(env.TAG_VERSION, 'alpha') || contains(env.TAG_VERSION, 'beta')
          files: |
            dist/${{ env.PROJECT_BASE_NAME }}_${{ matrix.target }}.zip
            dist/${{ env.PROJECT_BASE_NAME }}_${{ matrix.target }}.tar.gz
          fail_on_unmatched_files: true
